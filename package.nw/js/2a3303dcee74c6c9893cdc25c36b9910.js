;!function(require, directRequire){;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const React=require("react"),_=require("lodash"),idepluginManager=require('./f5a748840b272d2bf0223c95f6c8dbe3.js'),C=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),urlConfig=require('./f171257bbcaef547a3cf27266ccb0db2.js'),idepluginMessager=require('./e9e3fd38aeedddd6db73d1d015ff6952.js'),getMessager=require('./dfd9a72b9ff6078018aa4a64eed949a5.js'),{validType,tokenManager}=require('./dc244a5ba483ad6e0acd267d3b91b282.js'),webviewPool=require('./a78e6d6a87de1708226375ca4c320d76.js'),request=require('./15ba1827c7f6564a45df6bd44da3a977.js'),consoleDisplay=require('./2dfc6a3df6d6fc51266b293c8420e88b.js'),WHITE_LIST=require('./2ad9bc9b79736441dd0466a068a50f18.js'),hookMethodsCache=require('./c44dddb4ccd769f104fce4a777049908.js'),ABOUT_BLANK=`http://127.0.0.1:${global.proxyPort}/aboutblank`;class SimulatorPlugin extends React.Component{constructor(a){super(a),this.isPluginReady=!1,this.container=null,this.webview=null,this.webviewLoaded=!1,this.url="",this.appid="",this.pluginId=this.props.pluginId,this._onPluginMessage=this.onPluginMessage.bind(this),this.mountSimulatorPlugin=this.mountSimulatorPlugin.bind(this),this.resetPlugin=this.resetPlugin.bind(this),this.changeDisplay=this.changeDisplay.bind(this),this.clearMethods=this.clearMethods.bind(this),this.resetContainerStyle=this.resetContainerStyle.bind(this),this.specialInvokeCommands=new Map([["SET_USER_INFO","SET_USER_INFO"],["GET_USER_INFO","GET_USER_INFO"],["CLEAR_USER_INFO","CLEAR_USER_INFO"],["READY","READY"],["SEND_AUTH_REQUEST","SEND_AUTH_REQUEST"],["TRIGGER_SIMULATOR_EVENT","TRIGGER_SIMULATOR_EVENT"],["SHOW_SIMULATOR","SHOW_SIMULATOR"],["HIDE_SIMULATOR","HIDE_SIMULATOR"],["GET_LIB_VERSION","GET_LIB_VERSION"],["GET_DEVICE_SIZE","GET_DEVICE_SIZE"],["GET_APP_INFO","GET_APP_INFO"],["PRINT_ERROR","PRINT_ERROR"],["GOTO","GOTO"]]);const b=this.props.deviceInfo,c=this.props.deviceScale,d=b.statusbarHeight+b.navigationbarHeight,e=b.screenHeight-d;if(this.defaultContainerStyle={display:"flex",position:"relative",zIndex:1,top:`${30+d*c}px`,margin:"auto",padding:0,width:`${b.screenWidth}px`,height:`${e}px`,transform:`scale(${c})`,transformOrigin:"top"},this.state={style:this.defaultContainerStyle},this.props.project){const a=this.props.pluginManifests[this.props.project.simulatorType];if(a){const b=a.libs;if(b){const a=Object.keys(b);if(0<a.length){const b=this.props.project.simulatorPluginLibVersion[this.props.project.simulatorType];a.includes(b)||this.props.setProjectSimulatorPluginLibVersion(a[0])}}}}}shouldComponentUpdate(a,b){return a.project.simulatorType===this.props.project.simulatorType&&this.props.deviceInfo.model===a.deviceInfo.model&&this.props.deviceScale===a.deviceScale&&_.isEqual(this.props.pluginManifests,a.pluginManifests)&&_.isEqual(this.state.style,b.style)?!1:!0}componentWillReceiveProps(a){a.project.simulatorType!==this.props.project.simulatorType&&setTimeout(()=>{this.mountSimulatorPlugin(),this.clearMethods()});const b=a.pluginManifests;for(const c in b){const a=b[c].main;if(c===this.props.project.simulatorType&&this.url!==a){this.url=a,this.webview&&(this.webview.src=this.url);break}}(this.props.deviceInfo.model!==a.deviceInfo.model||this.props.deviceScale!==a.deviceScale)&&setTimeout(()=>this.resetContainerStyle())}componentDidMount(){this.mountSimulatorPlugin()}componentWillUnmount(){this.resetPlugin(),this.clearMethods(),this.pluginMessager&&this.pluginMessager.unRegister(this._onPluginMessage)}mountSimulatorPlugin(){if(this.props.project.simulatorType){for(const a in this.pluginMessager&&this.pluginMessager.unRegister(this._onPluginMessage),this.pluginId=this.props.project.simulatorType,this.props.pluginManifests){const b=this.props.pluginManifests[a];if(a===this.props.project.simulatorType){this.url=b.main,this.appid=b.appid;break}}this.pluginMessager=idepluginMessager.get(this.pluginId),this.pluginMessager.persistId=`${this.props.appid}-${this.pluginId}`,this.pluginMessager.register(this._onPluginMessage),this.initWebview()}}initWebview(){this.resetPlugin();const a=webviewPool.get("simulatorPlugin",{}),b=tokenManager.getSessionToken(validType.UA_TOKEN);a.setUserAgentOverride(`${navigator.userAgent} wechatdevtools simulatorplugin port/${global.messageCenterPort} extension pluginid/${this.pluginId} token/${b}`),a.src=ABOUT_BLANK;const c=()=>{this.webview.off("loadstop",c),this.webviewLoaded=!0,this.webview.src=this.url,this.webview.setAttribute("autosize","on"),this.setWebviewCss({position:"absolute",width:"100%",height:"100%"})};a.on("loadstop",c),a.initedByPluginManager||(idepluginManager.initPlugin(this.pluginId,a._webview),a.initedByPluginManager=!0);const d=this.container;a.attach(d),this.webview=a,this.url&&this.url!==this.webview.src&&(this.webview.src=this.url)}resetPlugin(){this.webview&&(this.webview.detach(),this.isPluginReady=!1,this.webviewLoaded=!1)}clearMethods(){hookMethodsCache.clean()}async onPluginMessage(a){const b=C.SIMULATOR_PLUGIN_HOOK_METHODS,{command:c,data:d,callbackID:e}=a;if(Object.values(b.APPSERVICE).includes(c)||Object.values(b.WEBVIEW).includes(c)){const a=c.split("_")[1];if("ON"===a&&hookMethodsCache.set({command:c,api:d.api,callbackID:d.callbackID,options:d.options}),"OFF"===a){const a=c.split("_");a[1]="ON";const b=a.join("_");hookMethodsCache.delete({command:b,api:d.api})}}else if(this.specialInvokeCommands.has(c))switch(c){case"SET_USER_INFO":{localStorage.getItem("simulatorPluginUserInfo")||localStorage.setItem("simulatorPluginUserInfo",JSON.stringify({}));const a=JSON.parse(localStorage.getItem("simulatorPluginUserInfo"));a[this.pluginId]=Object.assign({},a[this.pluginId],d);const b=JSON.stringify(a);localStorage.setItem("simulatorPluginUserInfo",b);break}case"GET_USER_INFO":{localStorage.getItem("simulatorPluginUserInfo")||localStorage.setItem("simulatorPluginUserInfo",JSON.stringify({}));const a=JSON.parse(localStorage.getItem("simulatorPluginUserInfo"))[this.pluginId]||{};this.pluginMessager.callback(e,a);break}case"CLEAR_USER_INFO":{const a=localStorage.getItem("simulatorPluginUserInfo");if(a&&JSON.parse(a)[this.pluginId]){const b=JSON.parse(a);b[this.pluginId]={},localStorage.setItem("simulatorPluginUserInfo",JSON.stringify(b))}break}case"READY":{this.isPluginReady=!0;break}case"SEND_AUTH_REQUEST":{this.appid||this.pluginMessager.callback(e,{errmsg:"no appid"});const{body:a}=await request({url:`${urlConfig.getSimulatorPluginCode}&appid=${this.appid}`,method:"get",needToken:1,needAppID:1});a.tmpcode?this.pluginMessager.callback(e,a):this.pluginMessager.callback(e,{errmsg:"failed"});break}case"TRIGGER_SIMULATOR_EVENT":{const{to:a,eventName:b}=d;if(!b)return;const c=getMessager();switch(a){case"appservice":c.triggerOnEvent({eventName:b,data:d.data||{}});break;case"webview":c.publish({eventName:b,data:d.data||{}});break;default:return;}break}case"SHOW_SIMULATOR":{this.changeDisplay(!0);break}case"HIDE_SIMULATOR":{this.changeDisplay(!1);break}case"GET_LIB_VERSION":{const a=this.props.project.simulatorPluginLibVersion[this.pluginId]||this.props.project.libVersion;this.pluginMessager.callback(e,{libVersion:a});break}case"GET_DEVICE_SIZE":{this.pluginMessager.callback(e,{width:this.props.deviceInfo.screenWidth,height:this.props.deviceInfo.screenHeight});break}case"GET_APP_INFO":{const{appName:a,appImageUrl:b}=this.props.project.attr;this.pluginMessager.callback(e,{appName:a,appImageUrl:b,ua:this.webview.getUserAgent()});break}case"PRINT_ERROR":{consoleDisplay.display({command:C.DISPLAY_ERROR,data:{title:d.title||"",error:{message:d.message||""}}});break}case"GOTO":{const a=d.url;a||this.pluginMessager.callback(e,{errMsg:"illegal url"});let b=!1;for(const c of WHITE_LIST)if(c.test(a)){b=!0;break}b?nw.Shell.openExternal(a):this.pluginMessager.callback(e,{errMsg:"illegal url"});break}default:}else"READY"===c&&console.log("simulator plugin is ready")}changeDisplay(a){this.container&&this.setState({style:Object.assign({},this.state.style,{zIndex:a?1:-1})})}setWebviewCss(a){if(this.webview&&this.webviewLoaded)for(const b in a){let c=a[b];"[object Number]"===Object.prototype.toString.call(a[b])&&(c=`${a[b]}px`),this.webview._webview.style[b]=c}}resetContainerStyle(){const a=this.props.deviceInfo,b=this.props.deviceScale,c=a.statusbarHeight+a.navigationbarHeight,d=a.screenHeight-c;this.setState({style:Object.assign({},this.state.style,{top:`${30+c*b}px`,width:`${a.screenWidth}px`,height:`${d}px`,transform:`scale(${b})`,transformOrigin:"top"})})}render(){const a=this.state.style;return React.createElement("div",{className:"SimulatorPlugin",style:a,ref:(a)=>{this.container=a}})}}exports.default=SimulatorPlugin;
;}(require("lazyload"), require);
