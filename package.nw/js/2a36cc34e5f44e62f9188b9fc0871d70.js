;!function(require, directRequire){;'use strict';const request=require('./15ba1827c7f6564a45df6bd44da3a977.js'),urlConfig=require('./f171257bbcaef547a3cf27266ccb0db2.js'),log=require('./72653d4b93cdd7443296229431a7aa9a.js'),messageConfig=require('./bcb48ae14d243711d3b31cb0f602d209.js'),ls=directRequire('./84858de8a097c9cf84ff2c2e3d86e2a9.js'),notifyManager=require('./d3ce001ab1e75959382f6a7e0156dd17.js'),SYNC_INTERVAL=600000,store=require('./bc78839ccca8df9e5ceeb7fae11b7be2.js'),menuActions=require('./25d0beb4120ce2acafb4e03b95444fda.js'),noticeCenterDB=require('./948f9199c1cd0ba6cb9d19ad84972410.js'),C=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),locales=require('./common/locales/index.js'),isMac='darwin'===process.platform;let syncTimer=null;function reportTipsClick(a){try{a.filter_buffer&&a.filter_buffer.msg_job_id&&request({url:urlConfig.reportTipsClick,method:'post',body:JSON.stringify({job_id:a.filter_buffer.msg_job_id}),needToken:1}).then((a)=>{global.appConfig.isDev&&console.log('report tips click res',a)}).catch((a)=>{log.error(`report tips click error: ${a.toString()}`)})}catch(a){}}function handleSystemTipsMsg(a){try{const b=JSON.parse(a.content),c={type:messageConfig.DBType.system,title:b.title||'',content:b.content||'',timestamp:a.create_time,link:''},d={title:b.title||'',message:b.content||''};switch(b.tips_type){case messageConfig.TipsType.toast:{d.priority=1,isMac||(d.requireInteraction=!1);break}case messageConfig.TipsType.info:{d.priority=2,isMac||(d.requireInteraction=!isMac);break}case messageConfig.TipsType.link:{d.priority=2,isMac||(d.requireInteraction=!isMac),d.buttons=[{title:b.confirmText||locales.config.VIEW_DETAILS}],d.callback=function(c){0===c&&(nw.Shell.openExternal(b.link),reportTipsClick(a))},c.link=b.link;break}}return notifyManager(d),c}catch(a){log.error(`handleSystemTipsMsg ${a}`)}}function handleCmdTipsMsg(a){const b=store.getState(),c=b.settings&&b.settings.notification||{};try{const b=JSON.parse(a.content),d={type:messageConfig.DBType.bbs,title:b.title||'',content:b.content||'',timestamp:a.create_time,filter_buffer:a.filter_buffer,from_uin:a.from_uin,link:''},e={title:b.title||'',message:b.content||'',priority:2,requireInteraction:!isMac};switch(b.tips_type){case messageConfig.CmdTipsType.showNewFeature:return console.group('recv deprecated msg:'),console.warn(b),void console.groupEnd();case messageConfig.CmdTipsType.visitBBS:return e.buttons=[{title:b.confirmText||locales.config.VIEW_DETAILS}],e.callback=(c)=>{0===c&&(menuActions.BBS(b.link,C.IDE_SCENE.NOTIFY),reportTipsClick(a))},d.link=b.link,c.bbs&&notifyManager(e,!0),d;case messageConfig.CmdTipsType.alarm:return d.type=messageConfig.DBType.alarm,d.link=b.link,e.callback=(c)=>{0===c&&(nw.Shell.openExternal(b.link),reportTipsClick(a))},e.buttons=[{title:b.confirmText||locales.config.VIEW_DETAILS}],c.alarm&&notifyManager(e,!0),d;case messageConfig.CmdTipsType.mobileTest:return d.type=messageConfig.DBType.system,c.sys&&(e.buttons=[{title:b.confirmText||locales.config.VIEW_DETAILS}],e.callback=async(a)=>{if(0===a)try{const{body:a}=await request({url:`${urlConfig.getMobileTestOpenTicket}`,needToken:1,needAppID:1}),c=-1<b.link.indexOf('?')?`${b.link}&devcode=${a.open_ticket}`:`${b.link}?devcode=${a.open_ticket}`;nw.Window.open(c,{width:C.SIZE.MOBILE_TEST_REPORT.WIDTH,height:C.SIZE.MOBILE_TEST_REPORT.HEIGHT,min_width:C.SIZE.MOBILE_TEST_REPORT.MIN_WIDTH})}catch(a){console.info(`mobile init open report error: ${a}`)}},notifyManager(e)),d;}}catch(a){log.error(`handleSystemTipsMsg ${a}`)}}async function handleMessageList(a){const b=store.getState(),c=b.settings&&b.settings.notification||{},d=[];for(let b=a.length-1;0<=b;b--){const e=a[b];let f;switch(e.type){case messageConfig.MsgType.tips:{c.sys&&(f=handleSystemTipsMsg(e));break}case messageConfig.MsgType.cmdTips:{f=handleCmdTipsMsg(e);break}case messageConfig.MsgType.systemMsg:break;default:}f&&d.push(f)}0<d.length&&(await noticeCenterDB.open(),await noticeCenterDB.insert(d),await noticeCenterDB.close())}function handleSyncData(a){if(a&&a.data){const b=JSON.parse(a.data).list;handleMessageList(b)}}async function sync(){const a=ls.syncKey,b=ls.batchSyncKey,{body:c}=await request({url:urlConfig.syncMessage,method:'post',body:JSON.stringify({sync_key:[a,b]}),needToken:1});let d;try{const a=c.sync_data[0],b=c.sync_data[1];handleSyncData(a),handleSyncData(b),a&&(ls.syncKey=a.sync_key),b&&(ls.batchSyncKey=b.sync_key)}catch(a){d=`sync catch error ${a}`}d&&log.error(d)}function startSync(){global.online||global.isDevWindow||(sync().catch((a)=>{log.error(`start sync error: ${a}`)}),syncTimer=setInterval(()=>{sync().catch((a)=>{log.error(`start sync error: ${a}`)})},SYNC_INTERVAL))}function stopSync(){clearInterval(syncTimer)}module.exports={startSync,stopSync,sync};
;}(require("lazyload"), require);
