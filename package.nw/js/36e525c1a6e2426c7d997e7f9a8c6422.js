'use strict';var _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a};!function(require,directRequire){const a=require('./bc78839ccca8df9e5ceeb7fae11b7be2.js'),b=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),c=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),d=require('./cc2c2970ff81ae4a83123e81ee123da2.js'),e=require('./78294f0b5b50fc38258d7028553744ef.js'),f=require('./36244f5aa8a25574083d64e28953b466.js'),g=require('./5eb00762b104199e0cf0af7efbe591da.js'),h=require('./5719b6ded53098ffd9e848abcac30153.js'),i=require('./da7c31daaf542cf1796023d8e344b98a.js'),j=require('./84b183688a46c9e2626d3e6f83365e13.js'),k=require('./06e9b107e2f64d8c544608037894d716.js'),l=require('./b543ae2da406cea63b3ad8951f17b6c0.js'),m='darwin'===process.platform,n=(a,b={})=>new Promise(async(d,i)=>{try{if(b.isTemp){let c;try{c=await g.getAppInfo(b.appid,b)}catch(a){i(a)}const e=_extends({},b,{projectpath:a,projectname:`tmp_${b.appid}_${+new Date}`}),h=`${b.appid}_${e.projectname}`;e.compileType=c.game_app?'game':'weapp',await f.openProject(c,e,a,b),d(h)}else{let j;if(j=e.checkProjectPath(a),j.error)return i(j.error);let k;if(j=e.checkProjectConfigJSON(a),j.error)return i(j.error);if(k=j.config,!k.appid||!k.projectname)return i(h.ERROR.NOT_FOUND_IN_PROJECT_CONFIG_JSON(k.appid?'projectname':'appid'));k.projectname=encodeURIComponent(decodeURIComponent(k.projectname||'')),k.isGameTourist&&(k.appid=c.GAME_TOURIST_APPID);const l=`${k.appid}_${k.projectname}`;if(f.isOpened(l,a)){process.stderr.write('isopened\n');const a=global.windowMap.get('MAIN');if(a)return a.show(),m||(a.setAlwaysOnTop(!0),setTimeout(()=>{a.setAlwaysOnTop(!1)},20)),setTimeout(()=>{f.openSimulatorAndDebugger(),f.compile()},20),void d(l)}let n;try{n=await g.getAppInfo(k.appid,b)}catch(a){i(a)}await f.openProject(n,k,a,b),d(l)}}catch(a){i(h.ERROR.GENERIC_ERROR(a.toString()))}}),o=(a,b={})=>new Promise(async(b,c)=>{let d;if(d=e.checkProjectPath(a),d.error)return c(d.error);let i;if(d=e.checkProjectConfigJSON(a),d.error)return c(d.error);if(i=d.config,!i.appid)return c(h.ERROR.NOT_FOUND_IN_PROJECT_CONFIG_JSON('appid'));let j;try{j=await g.getAppInfo(i.appid);const c=await f.getProject(j,i,a);l.closeDevWindow(c.projectid,!0),b()}catch(a){c(a)}});module.exports={registerHandlers:(c)=>{c.get('/open',async(c,d)=>{try{global.Win.showFunction&&(global.Win.show=global.Win.showFunction);const e=a.getState();if(e.window.mainWindow!==b.MAIN_WINDOW_TYPE.DEV&&e.window.mainWindow!==b.MAIN_WINDOW_TYPE.WEB_DEBUGGER)m?global.Win.show():global.Win.focus();else{const a=global.windowMap.get('MAIN');a&&(m?a.show():a.focus())}let f=c.mQuery.projectpath;const g=decodeURIComponent(c.mQuery.cli||''),h=decodeURIComponent(c.mQuery.from||'');g?f?i('cli_open_project',null,null,h?{engine_from:h}:null):i('cli_open_ide',null,null,h?{engine_from:h}:null):f?i('http_open_project',null,null,h?{engine_from:h}:null):i('http_open_ide',null,null,h?{engine_from:h}:null),f&&(f=decodeURIComponent(f),await n(f)),d.statusCode=200,d.end()}catch(a){d.statusCode=400;try{JSON.parse(a)&&d.writeHead(400,{"Content-Type":'application/json;  charset=utf-8'})}catch(a){}d.end(a.toString(),'utf8')}}),c.get('/minicode',async(a,b)=>{try{const c=decodeURIComponent(a.mQuery.link||''),d=decodeURIComponent(a.mQuery.dest||'');if(!c||!d)throw'minicode link / ID & target dir must be provided';await k(c,d);b.statusCode=200,b.end()}catch(a){b.statusCode=400;try{JSON.parse(a)&&b.writeHead(400,{"Content-Type":'application/json;  charset=utf-8'})}catch(a){}console.error('cli minicode error: ',a),b.end(a.toString(),'utf8')}}),c.get('/quit',async(a,b)=>{const c=decodeURIComponent(a.mQuery.cli||''),d=decodeURIComponent(a.mQuery.from||'');c?i('cli_quit',null,null,d?{engine_from:d}:null):i('http_quit',null,null,d?{engine_from:d}:null),b.statusCode=200,b.end(),l.notifyIdeWillBeQuit()}),c.get('/close',async(a,b)=>{const c=decodeURIComponent(a.mQuery.projectpath||''),d=decodeURIComponent(a.mQuery.cli||''),e=decodeURIComponent(a.mQuery.from||'');d?i('cli_close',null,null,e?{engine_from:e}:null):i('http_close',null,null,e?{engine_from:e}:null);try{await o(c),b.statusCode=200,b.end()}catch(a){if(a){b.statusCode=400;try{JSON.parse(a)&&b.writeHead(b.statusCode,{"Content-Type":'application/json;  charset=utf-8'})}catch(a){}b.end(a)}else b.writeHead(500,{"Content-Type":'application/json;  charset=utf-8'}),b.end()}})},openProject:n}}(require('lazyload'),require);