;!function(require, directRequire){;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const config_1=require('./a148d3a11fd5268109e21fb40c9d527b.js'),log_1=require('./56a764ae9cb4336bf6babe1c1da0275b.js'),fs=require("fs"),path=require("path"),vendorDownloader=require('./b15113dd543cbfb6f4172e5f5fa6563e.js'),vendorManager=require('./d28a711224425b00101635efe1034c99.js'),log=log_1.default("[vendor]");function fsExistsAsync(a){return new Promise((b)=>{fs.exists(a,(a)=>{b(a)})})}function fsLstatsAsync(a){return new Promise((b,c)=>{fs.lstat(a,(a,d)=>{a?c(a):b(d)})})}async function getFile(a,b){let c,d;try{const e=await vendorManager.getFile(a,b+"");if(!e)throw new Error("invalid vendor content"+e);d=(e.version||"")+"",d+=" ["+(b+"")+"]",c=e.content.toString()}catch(b){console.error(b);const e=await vendorManager.getFile(a);if(!e)throw new Error("invalid vendor content"+e);c=e.toString(),d=vendorManager.getVersion()||"?"}try{}catch(a){console.error(a)}return{content:c,version:d}}exports.getFile=getFile;function getDefaultVendorPath(){return""}exports.getDefaultVendorPath=getDefaultVendorPath;async function getVendorPath(a){try{const b=path.join(config_1.RemoteVendorDir,a+""),c=await fsExistsAsync(b);if(c){const a=await fsLstatsAsync(b);if(a.isDirectory())return b;log.assert("vendor dir",b,"is not a directory")}await vendorDownloader.downloadVendor(a,b);return b}catch(a){return log.e(a),getDefaultVendorPath()}}exports.getVendorPath=getVendorPath;
;}(require("lazyload"), require);
