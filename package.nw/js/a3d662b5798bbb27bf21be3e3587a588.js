;!function(require, directRequire){;'use strict';const appserviceMessager=require('./a1dd553cc059d528bb0ef56afed53968.js'),webviewMessager=require('./a15851ca252a104aad8b3fd3fc114574.js'),{setDeviceRotated}=require('./fc137838572a83604db39acff8e909e0.js'),{getSystemInfo}=require('./7d1472568e6410618b620b5dff451f53.js'),DEFAULT_ORIENTATION='portrait';function getPageOrientationValue(a){return a.lastPageOrientation}function getComputedOriginalPageOrientationValue({private_setPageOrientation:a,setPageOrientation:b,originalPageOrientation:c}){return a||b||c}function getOriginalPageOrientationObject(a,b='',c=DEFAULT_ORIENTATION){const{page:{[`${b}.html`]:e},global:d}=a;let f=d.window.pageOrientation||DEFAULT_ORIENTATION;return e&&e.window&&(f=e.window.pageOrientation||f),{originalPageOrientation:f,lastPageOrientation:'auto'===f?c:f}}function getCurrentPageOrientationObject({simulator:{currentWebviewID:a,webviewInfos:b}}){const c=b[a];if(c)return c.pageOrientation;throw new Error('rotatehelper: getCurrentPageOrientation: No current page is loaded yet')}function getPreviousPage({simulator:a},b=1){let c=a.currentWebviewID,d=a.webviewInfos[c];for(;0<b&&d&&-1!==d.parent;)c=d.parent,d=a.webviewInfos[c],b--;return d}function getPreviousPageOrientationObject(a,b=1){const c=getPreviousPage(a,b);return c.pageOrientation}function canSimulatorRotate(a,b={pathName:''}){const{pathName:c}=b,d=a.toolbar,e=a.simulator;let{appConfig:f}=b;if(f=f||e.appConfig,!f||0===Object.entries(f).length)return!1;let g=getOriginalPageOrientationObject(f,c,DEFAULT_ORIENTATION);if(!c){const b=e.currentWebviewID,c=e.webviewInfos,d=c&&c[b]||{};getCurrentPageOrientationObject(a),g=d.pageOrientation}const h=getComputedOriginalPageOrientationValue(g);return d.deviceInfo.isPad&&f.resizable||!d.deviceInfo.isPad&&'auto'===h}function shouldSimulatorRotate(a,b){const c=getPageOrientationValue(a),d=getComputedOriginalPageOrientationValue(b);return c!==d&&'auto'!==d}const buildResizeEvent=({eventName:b='onViewDidResize',deviceOrientation:a})=>async(c)=>{const{screenWidth:d,screenHeight:e,windowWidth:f,windowHeight:g}=await getSystemInfo(null,'',c),h=c(),i=h.simulator.currentWebviewID,j={eventName:b,webviewID:i,data:{size:{screenWidth:d,screenHeight:e,windowWidth:f,windowHeight:g},deviceOrientation:a,changedWebviewIds:[i]}};return h.toolbar.deviceInfo.isPad||(j.data.pageOrientation=getCurrentPageOrientationObject(h)),j};async function rotateSimulator(a,b,c,d={triggerAppserviceEvent:!0,triggerWebviewEvent:!0}){const{triggerAppserviceEvent:e,triggerWebviewEvent:f}=d;b(setDeviceRotated(a));const g=await buildResizeEvent({deviceOrientation:a?'landscape':'portrait'})(c);e&&appserviceMessager.triggerOnEvent(g),f&&webviewMessager.triggerOnEvent(g)}module.exports={canSimulatorRotate,rotateSimulator,getOriginalPageOrientationObject,getComputedOriginalPageOrientationValue,getCurrentPageOrientationObject,getPreviousPageOrientationObject,getPageOrientationValue,shouldSimulatorRotate,buildResizeEvent,DEFAULT_ORIENTATION};
;}(require("lazyload"), require);
