;!function(require, directRequire){;'use strict';const events=require('events'),EventEmitter=events.EventEmitter;let windows=[];const emitter=new EventEmitter;module.exports=class{static get windows(){return windows.slice()}static register(a){windows.push(a),a.hasOwnProperty('id')&&emitter.emit(`register_${a.id}`,a.window)}static unregister(a){const b=windows.findIndex((b)=>b.id===a);-1<b&&windows.splice(b,1)}static get(a){const b=windows.find((b)=>b.id===a);return b?b.window:null}static clear(){windows=[]}static onWindowRegistered(a){return new Promise((b)=>{const c=windows.findIndex((b)=>b.id===a);-1<c?setImmediate(()=>{b(windows[c])}):emitter.once(`register_${a}`,(a)=>b(a))})}};
;}(require("lazyload"), require);
