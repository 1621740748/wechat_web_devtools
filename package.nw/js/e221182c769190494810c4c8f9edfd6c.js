;!function(require, directRequire){;'use strict';const path=require('path'),fs=require('fs'),_=require('lodash'),{REHYDRATE}=require('redux-persist/constants'),actions=require('./0634ee2ebd3e560d9d4804ecc960160f.js'),localstorage=require('./84858de8a097c9cf84ff2c2e3d86e2a9.js'),log=require('./72653d4b93cdd7443296229431a7aa9a.js'),weappConfig=require('./6242f55dbdfe53c2f07b7a51568311f2.js'),dirConfig=require('./92320c1386e6db6a6f2556736a9bc280.js'),vendorManager=require('./d28a711224425b00101635efe1034c99.js'),C=require('./56c390e04c10e91a4aa2a2c19d9a885d.js'),compileTypeConfig=require('./9fdd4ac31a05c27355910f0d74accd4c.js'),clientWindowSync=require('./881e653f19d837f2408386047cb8c38c.js'),tcbReducer=require('./f7f00c29d59ec60edc211efe68c159c4.js'),simulatorTypeConfig=require('./efd8b4323f89b2a759d044d894e3a4f0.js'),hookMethodsCache=require('./c44dddb4ccd769f104fce4a777049908.js'),getTcb=(a)=>{const b=a?localstorage.getTcb(a)||{}:{};return Object.assign({envList:[],currentEnv:{},functionData:{},command:{},scfMapInEnv:{},fileMapInEnv:{}},b)},formatOldVersionData=(a)=>{a.attr===void 0&&(a.attr={}),a.runtimeAttr===void 0&&(a.runtimeAttr={}),a.condiction===void 0&&(a.condiction={weapp:{current:-1,list:[]},search:{current:-1,list:[]},conversation:{current:-1,list:[]}}),a.condiction.game===void 0&&(a.condiction.game={current:-1,list:[]}),a.condiction.plugin===void 0&&(a.condiction.plugin={current:-1,list:[]}),a.compileType===void 0&&(a.compileType='weapp'),a.setting===void 0&&(a.setting={urlCheck:!0,es6:!0,postcss:!0,minified:!0,autoAudits:!1,newFeature:!1,uglifyFileName:!1,scriptsEnable:!1,nodeModules:!1}),a.scripts===void 0&&(a.scripts={}),a.appid&&(a.tcb=getTcb(a.appid)),a.simulatorPluginLibVersion||(a.simulatorPluginLibVersion={}),a.simulatorType||(a.simulatorType=simulatorTypeConfig.wechat)},getInitialState=()=>{let a,b=localstorage.lastSelect;return b=global.isDevWindow?'miniprogram'===global.devType?global.devInfo.projectid:C.MAIN_WINDOW_TYPE.WEB_DEBUGGER:null,localstorage.projectList[b]?(a=localstorage.projectList[b],a&&a.qcloud&&delete a.qcloud,formatOldVersionData(a),a.storage={},a.libVersion=vendorManager.setVersion(a.libVersion)):b===C.MAIN_WINDOW_TYPE.WEB_DEBUGGER?a=null:global.isDevWindow&&(global.devInfo.isTemp?a=global.devInfo.project:(console.error(global.devInfo),clientWindowSync.notifyCloseWindow(!0))),{current:a,list:localstorage.projectList}};function project(a=getInitialState(),b={}){switch(b.type){case actions.PROJECT_SET_PROJECT_CONFIG:return Object.assign({},a,{current:Object.assign({},a.current,b.data)});case actions.PROJECT_CREATE_PROJECT_SUCCESS:return Object.assign({},a,{list:Object.assign({},a.list,{[b.project.projectid]:b.project})});case actions.PROJECT_UPDATE_LIST:return Object.assign({},a,{list:b.list});case actions.PROJECT_MERGE_RUMTIME_ATTR:return Object.assign({},a,{current:Object.assign({},a.current,{runtimeAttr:Object.assign({},a.current.runtimeAttr,b.data)})});case actions.PROJECT_SET_RUMTIME_ATTR:return Object.assign({},a,{current:Object.assign({},a.current,{runtimeAttr:Object.assign({isExtAppId:b.data.appid!==a.current.appid},b.data)})});case actions.PROJECT_UPDATE_ATTR:{const c=b.data,d=Object.assign({},a.current,{attr:Object.assign({},a.current.attr,c)});return c.gameApp&&d.compileType!==compileTypeConfig.conversation&&d.compileType!==compileTypeConfig.search&&(d.compileType=compileTypeConfig.game),d.runtimeAttr&&d.runtimeAttr.appid===b.data.appid&&(d.runtimeAttr=Object.assign({},d.runtimeAttr,b.data)),Object.assign({},a,{current:d})}case actions.PROJECT_OPEN_PROJECT:{const c=a.list[b.projectid];if(!c)return log.error(`project.reducer.js trying open a project with unknown projectid: ${b.projectid}`),a;return c.qcloud&&delete c.qcloud,formatOldVersionData(c),c.libVersion=vendorManager.setVersion(c.libVersion),Object.assign({},a,{current:c})}case actions.PROJECT_OPEN_TEMP_PROJECT:return Object.assign({},a,{current:b.project,list:Object.assign({},a.list,{[b.project.projectid]:b.project})});case actions.PROJECT_SET_COMPILE_CONDICTION:{const c=a.current.compileType,d=a.current.condiction[c]||{},e=[].concat(d.list||[]),f=-1===b.data.id?e.length:b.data.id;return e[f]=Object.assign({},b.data),Object.assign({},a,{current:Object.assign({},a.current,{condiction:Object.assign({},a.current.condiction,{[c]:{current:f,list:e}})})})}case actions.PROJECT_SELECT_COMPILE_CONDICTION:{const c=a.current.compileType,d=a.current.condiction[c]||{};return Object.assign({},a,{current:Object.assign({},a.current,{condiction:Object.assign({},a.current.condiction,{[c]:Object.assign({},d,{current:b.current})})})})}case actions.PROJECT_REMOVE_COMPILE_CONDICTION:{const c=b.data.id,d=a.current.compileType,e=a.current.condiction[d]||{},f=[].concat(e.list||[]);return f.splice(c,1),Object.assign({},a,{current:Object.assign({},a.current,{condiction:Object.assign({},a.current.condiction,{[d]:{current:-1,list:f}})})})}case actions.PROJECT_CHANGE_APPID:{b.data;return Object.assign({},a,{current:Object.assign({},a.current,{appid:b.data.appid,projectid:b.data.projectid,isTourist:b.data.appid===C.TOURIST_APPID,isGameTourist:b.data.appid===C.GAME_TOURIST_APPID,attr:{},tcb:getTcb()}),list:localstorage.projectList})}case actions.PROJECT_SET_SETTING:return Object.assign({},a,{current:Object.assign({},a.current,{setting:Object.assign({},a.current.setting,b.data)})});case actions.PROJECT_SET_LIBVERSION:return Object.assign({},a,{current:Object.assign({},a.current,{libVersion:b.data})});case actions.PROJECT_SET_STORAGE:{const c=b.data.openid,d=b.data.cache,e=`storage_${a.current.hash}_${c}`;try{const a=path.join(dirConfig.WeappStorage,`${e}.json`);fs.writeFileSync(a,JSON.stringify(d),'utf8')}catch(b){return a}return Object.assign({},a,{current:Object.assign({},a.current,{storage:{openid:c,cache:d}})})}case actions.PROJECT_SET_COMPILE_TYPE:return Object.assign({},a,{current:Object.assign({},a.current,{compileType:b.data})});case actions.PROJECT_SET_SIMULATOR_TYPE:{const c=b.data;return a.current.simulatorType!==b.data&&hookMethodsCache.setSimulatorType(c),Object.assign({},a,{current:Object.assign({},a.current,{simulatorType:c})})}case actions.PROJECT_SET_SIMULATOR_LIB_VERSION:return Object.assign({},a,{current:Object.assign({},a.current,{simulatorPluginLibVersion:b.data})});case actions.PROJECT_SET_QCLOUD:{const c=a.current.qcloud||{};return Object.assign({},a,{current:Object.assign({},a.current,{qcloud:Object.assign({},c,b.data)})})}case actions.PROJECT_SET_PKG_SIZE:{let c=a.current.pkgSize||{};return c=Object.assign({},c,b.data),Object.assign({},a,{current:Object.assign({},a.current,{pkgSize:c})})}case actions.PROJECT_SET_PLUGIN_INFO:return Object.assign({},a,{current:Object.assign({},a.current,{pluginInfo:b.data||[]})});case actions.PROJECT_CLOSE_PROJECT:return Object.assign({},a,{current:null});case actions.PROJECT_REMOVE_PROJECT:{const c={};return a.current&&a.current.id===b.id&&(c.current=null),c.list=Object.assign({},a.list),delete c.list[b.id],Object.assign({},a,c)}case actions.PROJECT_SET_UPLOAD_INFO:return Object.assign({},a,{current:Object.assign({},a.current,{uploadInfo:Object.assign({},a.current.uploadInfo,b.data)})});case actions.PROJECT_SET_SHARE_INFO:return Object.assign({},a,{current:Object.assign({},a.current,{shareInfo:Object.assign({},a.current.shareInfo,b.data)})});case actions.PROJECT_SYNC_STORE:{const c=Object.assign({},a,{syncTime:b.syncTime});return b.data.project&&b.data.project.list&&(c.list=b.data.project.list),c}case actions.PROJECT_SET_SCRIPTS:return Object.assign({},a,{current:Object.assign({},a.current,{scripts:Object.assign({},a.current.scripts,b.data)})});case actions.PROJECT_SET_TCBFN_ROOT:return Object.assign({},a,{current:Object.assign({},a.current,{cloudfunctionRoot:b.data})});case actions.PROJECT_SET_TCBFNTEMPLATE_ROOT:return Object.assign({},a,{current:Object.assign({},a.current,{cloudfunctionTemplateRoot:b.data})});case actions.PROJECT_SET_TIME_RECORDS:return Object.assign({},a,{current:Object.assign({},a.current,{timeRecords:Object.assign({},a.current.timeRecords,b.data)})});case REHYDRATE:return _.merge(_.cloneDeep(a),b.payload.project);default:{if(a.current){const c=tcbReducer(a.current.tcb,b);if(a.current.tcb!==c)return localstorage.setTcb(a.current.appid,c),Object.assign({},a,{current:Object.assign({},a.current,{tcb:c})})}return a}}}module.exports=project;
;}(require("lazyload"), require);
