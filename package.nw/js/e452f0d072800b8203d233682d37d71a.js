;!function(require, directRequire){;'use strict';const React=require('react'),NavigationBar=require('./e6c156a6815c8adb17a51ec940f64b68.js'),tools=require('./d3976cc01aeebc5b09e11c4135b6bd8d.js'),debuggerActions=require('./c4190a2430506f3602ca550e1e75d620.js'),StatusBar=require('./4389a88e405d1d37f36c16fc0ec96540.js'),locales=require('./common/locales/index.js'),{connect}=require('react-redux'),mapStateToProps=(a)=>{const b=a.webdebugger||{},c=a.toolbar.deviceInfo,d=b.cardInfo;return{deviceScale:a.toolbar.deviceScale,width:c.screenWidth,height:c.screenHeight,navigationbarHeight:c.navigationbarHeight,api:d.api,cardInfo:d.cardInfo||[],callbackID:d.callbackID,runtimeID:d.runtimeID,show:'choosecard'===d.show}},mapDispatchToProps=(a)=>({debuggerActions:tools.bindActionCreators(debuggerActions,a)});class ChooseCard extends React.Component{constructor(a){super(a),this.state={lazyLoaded:a.show}}componentDidMount(){this._cancalLocaleListener=locales.onChangeLocale(()=>this.forceUpdate())}componentWillUnmount(){this._cancalLocaleListener()}componentWillReceiveProps(a){a.show!==this.props.show&&a.show&&this.setState({lazyLoaded:!0})}chooseCard(a){const b=a.currentTarget.dataset,c=[{card_id:b.cardid,encrypt_code:b.encryptcode}];this.props.debuggerActions.hideCardView({callbackID:this.props.callbackID,runtimeID:this.props.runtimeID,res:{errMsg:`${this.props.api}:ok`,choose_card_info:JSON.stringify(c)}})}cancel(){this.props.debuggerActions.hideCardView({runtimeID:this.props.runtimeID,callbackID:this.props.callbackID,res:{errMsg:`${this.props.api}:cancel`}})}render(){if(!this.state.lazyLoaded)return null;const a=this.props,b=this.props.cardInfo,c=locales.config.MY_CARDS,d=b.map((a,b)=>React.createElement('div',{onClick:this.chooseCard.bind(this),key:b,"data-appid":a.app_id,"data-cardid":a.card_tp_id,"data-encryptcode":a.encrypt_code,className:'webview-card-choose-item'},React.createElement('div',{className:'webview-card-choose_m'},React.createElement('div',{className:'webview-card-choose_left'},React.createElement('img',{className:'webview-card-choose-item_img',src:a.logo_url})),React.createElement('div',{className:'webview-card-choose_details'},React.createElement('div',{className:'webview-card-choose-item_name'},a.sub_title),React.createElement('div',{className:'webview-card-choose-item_info'},a.title)))));let e=d.length?React.createElement('div',{className:'webview-card-choose-item'},d):React.createElement('span',{className:'webview-card-choose-mycard webview-card-choose-mycardEmpty'},locales.config.NO_CARDS_ADDED);const f={marginLeft:-a.width/2,width:a.width,height:a.height,transform:`scale(${a.deviceScale})`,transformOrigin:'50% 0'};return a.isPopup&&(f.top=0),React.createElement('div',{className:'simulator',style:f},React.createElement(StatusBar,{height:20,titleStyle:'white',backgroundColor:'#000000'}),React.createElement(NavigationBar,{cover:!0,width:a.width,height:a.navigationbarHeight,title:locales.config.MY_CARDS,backgroundColor:'#000000',frontColor:'#ffffff',showLeftBtn:!0,onLeftBtnClick:this.cancel.bind(this)}),React.createElement('div',{className:'webview'},React.createElement('div',{className:'coupons'},e)))}}module.exports=connect(mapStateToProps,mapDispatchToProps)(ChooseCard);
;}(require("lazyload"), require);
