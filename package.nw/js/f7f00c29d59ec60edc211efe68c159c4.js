;!function(require, directRequire){;"use strict";const actions=require('./0634ee2ebd3e560d9d4804ecc960160f.js');function getInitialState(){return{envList:[],currentEnv:{},functionData:{},command:{},scfMapInEnv:{},fileMapInEnv:{}}}module.exports=function(a=getInitialState(),b={}){switch(b.type){case actions.TCB_SET_ENV_LIST:return Object.assign({},a,{envList:b.data});case actions.TCB_SELECT_ENV:{const c=a.envList[b.data];return c?Object.assign({},a,{currentEnv:c}):a}case actions.TCB_CONSOLE_COMMAND:return Object.assign({},a,{command:b.data});case actions.TCB_SET_SCF_LIST:{const c=a.scfMapInEnv[b.data.namespace]||{};return b.data.list.forEach((a)=>{a.modTimestamp=new Date(a.ModTime).getTime(),a.updateKey=b.data.updateKey,c[a.FunctionName]=a}),Object.assign({},a,{scfMapInEnv:Object.assign({},a.scfMapInEnv,{[b.data.namespace]:c})})}case actions.TCB_CLEAN_SCF_LIST:{const c=a.scfMapInEnv[b.data.namespace]||{},d={};for(const a in c)c[a].updateKey===b.data.updateKey&&(d[a]=c[a]);return Object.assign({},a,{scfMapInEnv:Object.assign({},a.scfMapInEnv,{[b.data.namespace]:d})})}case actions.TCB_SET_FILE:{const c=a.fileMapInEnv[b.data.namespace]||{};return Object.assign({},a,{fileMapInEnv:Object.assign({},a.fileMapInEnv,{[b.data.namespace]:Object.assign({},c,{[b.data.functionName]:b.data.fileList})})})}default:return a;}};
;}(require("lazyload"), require);
