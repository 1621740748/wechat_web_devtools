!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),(()=>{const e=document.createElement("iframe"),t=location.protocol+"//"+location.host;e.setAttribute("id","auditsFrame"),e.setAttribute("name","auditsFrame"),e.setAttribute("src","/wxacrawler/public/audits/index.html?runtime=1&r="+Math.random()),e.setAttribute("attribute","allow-same-origin"),e.setAttribute("frameborder","0"),e.style.display="none",Object.assign(e.style,{position:"fixed",left:0,bottom:0,zIndex:5e3,width:"100%",height:"600px",borderTop:"1px solid #ccc"}),document.body.appendChild(e),window.addEventListener("message",n=>{const o=n.data;if(o&&o.command)switch(o.command){case"REPORT":{const e=JSON.parse(o.data);"stop"===e.extra1&&(window.auditsResult=e);break}case"PANEL_READY":e&&e.contentWindow&&(e.contentWindow.postMessage({command:"PANEL_READY_CALLBACK",data:{isGameApp:!1}},t),e.contentWindow.postMessage({command:"START_AUDITS"},t));break;case"TRANSFER":e&&e.contentWindow&&"AUDITS_FRAME"!=o.protocol&&e.contentWindow.postMessage(o,t),"APPSERVICE_EXPERIENCE"!==o.protocol&&window.native.appServiceMessenger.target.postMessage(o,t),"DEVTOOLS_EXPERIENCE"!==o.protocol&&window.native.webviewManager.webviews.forEach(e=>{e&&e.iFrame&&e.iFrame.contentWindow&&e.iFrame.contentWindow.postMessage(o,t)})}}),window.sendMsgToAuditsPlugin=function(n){e&&e.contentWindow&&e.contentWindow.postMessage({command:"AUDITS_NATIVE_MESSAGE_TO_PLUGIN",data:n},t)}})()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,